// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id        Int      @id @default(autoincrement())
  roleId    Int      
  role      Role     @relation(fields: [roleId], references: [id])
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  lastLoggedIn DateTime @default(now())
  posts     Post[]   @relation 
  likes     Like[]   @relation 
  comments  comment[] @relation
}

model Post {
  id         Int          @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean       @default(false)
  likes      Like[]        @relation("PostLikes")
  comments   comment[]     @relation("PostComments")  
  authorId   Int            
  Time       DateTime      @default(now()) 
  author     User          @relation(fields: [authorId], references: [id])
  categories category[]   @relation("PostCategories")
}

model category {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String
  posts       Post[]      @relation("PostCategories")
}

model Like {
  id       Int      @id @default(autoincrement())
  userId   Int
  postId   Int
  time     DateTime @default(now()) 
  post     Post     @relation("PostLikes", fields: [postId], references: [id]) 
  user     User     @relation(fields: [userId], references: [id]) 
}

model comment{
  id Int @id @default(autoincrement())
  UserId Int
  PostId Int
  Time   DateTime @default(now())
  Text   String 
  userId   Int
  postId   Int
  post     Post     @relation("PostComments", fields: [postId], references: [id]) 
  user     User     @relation(fields: [userId], references: [id]) 
}